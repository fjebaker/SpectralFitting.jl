name: Test

on:
  pull_request:
    branches:
      - main
    paths:
      - 'src/**.jl'
      - 'test/**.jl'
  push:
    branches:
      - main
    paths:
      - 'src/**.jl'
      - 'test/**.jl'

concurrency:
  # cancels when a PR gets updated
  group: ${{ github.head_ref || github.run_id }}-${{ github.actor }}
  cancel-in-progress: true

jobs:

  smoke-test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }}
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        julia-version: ['1.11']
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: fjebaker/spectral-fitting-test-suite
          path: data
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.julia-version }}
      - run: |
          ls -la
          ls -la data
      - uses: actions/cache@v4
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - run: julia -e 'import Pkg; Pkg.Registry.add(Pkg.RegistrySpec(url="https://github.com/astro-group-bristol/AstroRegistry/"))'
      - uses: julia-actions/julia-buildpkg@v1
      - run: cat Manifest.toml
      - run: |
          julia --color=yes --math-mode=ieee --check-bounds=yes -tauto --project=. -e '
            import Pkg
            Pkg.test(; coverage=true, force_latest_compatible_version=true)
          '
        env:
          SF_TEST_SUITE_DATA: "../data/sample-data"
      - uses: julia-actions/julia-processcoverage@v1
        with:
          directories: src
      - uses: codecov/codecov-action@v5
        with:
          files: lcov.info
